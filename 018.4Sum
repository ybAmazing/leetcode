public class Solution {
    static public List<List<Integer>> res = null;
    public List<List<Integer>> fourSum(int[] nums, int target) {
        res = new LinkedList<List<Integer>>();
        Arrays.sort(nums);
        int cnt = nums.length;
        for(int i = 0; i < cnt - 3; i++ ){
            if( i!= 0 && nums[i] == nums[i-1])   continue;
            for(int j = i + 1; j < cnt -2; j++){
                if(j != i + 1 && nums[j] == nums[j-1])    continue;
                int now = target -(nums[i] + nums[j]);
                int l = j + 1 , r = cnt -1;
                if(nums[l] + nums[l+1] > now)   break;
                if(nums[r] + nums[r-1] < now)   continue;
                while( l < r){
                    if(nums[l] + nums[r] < now){
                        l++;
                        while(l < r && nums[l] == nums[l-1])  l++;
                    }else if( nums[l] + nums[r] > now){
                        r--;
                        while(l < r && nums[r] == nums[r+1])  r--;
                    }else{
                        res.add(Arrays.asList(nums[i],nums[j],nums[l],nums[r]));
                        l++;
                        r--;
                        while(l < r && nums[l] == nums[l-1])  l++;
                        while(l < r && nums[r] == nums[r+1])  r--;
                    }
                }
            }
        }
        return res;
    }
}
